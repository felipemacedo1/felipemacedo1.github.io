class TerminalPortfolio {
  constructor() {
    this.output = document.getElementById("output");
    this.input = document.getElementById("commandInput");
    this.cursor = document.getElementById("cursor");
    this.commandHistory = this.loadHistory();
    this.historyIndex = -1;
    this.currentTheme = this.loadTheme();
    this.isTyping = false;
    this.typewriterSpeed = 50;
    this.suggestions = [];
    this.suggestionIndex = -1;

    this.commands = {
      help: this.showHelp.bind(this),
      clear: this.clearTerminal.bind(this),
      menu: this.showMenu.bind(this),
      about: this.showAbout.bind(this),
      sobre: this.showAbout.bind(this),
      1: this.showAbout.bind(this),
      projects: this.showProjects.bind(this),
      projetos: this.showProjects.bind(this),
      2: this.showProjects.bind(this),
      contact: this.showContact.bind(this),
      contato: this.showContact.bind(this),
      3: this.showContact.bind(this),
      whoami: this.whoami.bind(this),
      skills: this.showSkills.bind(this),
      experience: this.showExperience.bind(this),
      education: this.showEducation.bind(this),
      certifications: this.showCertifications.bind(this),
      resume: this.downloadResume.bind(this),
      status: this.showStatus.bind(this),
      date: this.showDate.bind(this),
      ls: this.listFiles.bind(this),
      "ls -la": this.listFilesDetailed.bind(this),
      pwd: this.showPath.bind(this),
      sudo: this.sudoResponse.bind(this),
      "theme dark": () => this.changeTheme("dark"),
      "theme light": () => this.changeTheme("light"),
      "theme matrix": () => this.changeTheme("matrix"),
      "theme hacker": () => this.changeTheme("hacker"),
      "theme retro": () => this.changeTheme("retro"),
      "theme contrast": () => this.changeTheme("contrast"),
      "h4x0r-mode": this.hackerMode.bind(this),
      matrix: this.matrixMode.bind(this),
      konami: this.konamiCode.bind(this),
      coffee: this.needCoffee.bind(this),
      tdah: this.needCoffee.bind(this),
      ascii: this.ascii.bind(this),
      growthfolio: this.growthfolio.bind(this),
      eastereggs: this.eastereggs.bind(this),
      exit: this.exitTerminal.bind(this),
      glitch: this.glitchEffect.bind(this),
      joke: this.showJoke.bind(this),
      quote: this.showQuote.bind(this),
      stats: this.showStats.bind(this),
      fullscreen: this.toggleFullscreen.bind(this),
      fs: this.toggleFullscreen.bind(this),
    };

    this.startTime = Date.now();
    this.version = "v1.0.0";
    this.init();
    this.fetchVersion();
  }

  init() {
    this.setupEventListeners();
    this.createClock();
    this.applyTheme();
    this.startInitialSequence();
  }

  applyTheme() {
    document.body.className = `theme-${this.currentTheme}`;
  }

  setupEventListeners() {
    this.input.addEventListener("keydown", (e) => {
      if (this.isTyping) return;

      switch (e.key) {
        case "Enter":
          if (this.suggestions.length > 0 && this.suggestionIndex >= 0) {
            e.preventDefault();
            this.selectSuggestion(this.suggestions[this.suggestionIndex]);
          } else {
            this.processCommand();
          }
          break;
        case "ArrowUp":
          e.preventDefault();
          if (this.suggestions.length > 0) {
            this.suggestionIndex =
              this.suggestionIndex <= 0
                ? this.suggestions.length - 1
                : this.suggestionIndex - 1;
            this.displaySuggestions();
          } else {
            this.navigateHistory("up");
          }
          break;
        case "ArrowDown":
          e.preventDefault();
          if (this.suggestions.length > 0) {
            this.suggestionIndex =
              this.suggestionIndex >= this.suggestions.length - 1
                ? 0
                : this.suggestionIndex + 1;
            this.displaySuggestions();
          } else {
            this.navigateHistory("down");
          }
          break;
        case "Escape":
          this.hideSuggestions();
          break;
        case "Tab":
          e.preventDefault();
          this.autoComplete();
          break;
      }
    });

    this.input.addEventListener("input", () => {
      this.updateCursor();
      this.showSuggestions();
    });

    this.input.addEventListener("blur", () => {
      setTimeout(() => this.hideSuggestions(), 200);
    });

    document.addEventListener("click", () => {
      this.input.focus();
    });

    // Keyboard shortcuts
    document.addEventListener("keydown", (e) => {
      if (e.ctrlKey && e.key === "l") {
        e.preventDefault();
        this.clearTerminal();
      }

      if (e.ctrlKey && e.key === "c") {
        e.preventDefault();
        this.addToOutput('<span class="error">^C</span>');
        this.input.value = "";
        this.updateCursor();
      }
    });

    // Mobile support
    if (window.innerWidth <= 768) {
      document.getElementById("mobileKeyboard").style.display = "block";
    }
  }

  createClock() {
    const clock = document.getElementById("terminal-clock");
    const updateClock = () => {
      const now = new Date();
      const time = now.toLocaleTimeString("pt-BR", {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
      });
      clock.textContent = `üïí ${time}`;
    };
    updateClock();
    setInterval(updateClock, 1000);
  }

  async startInitialSequence() {
    this.input.disabled = true;
    await this.sleep(500);

    await this.typeCommand("menu");
    await this.executeCommandSilent("menu");

    this.input.disabled = false;
    this.input.focus();
  }

  async typeCommand(command) {
    this.isTyping = true;
    this.input.value = "";

    for (let i = 0; i < command.length; i++) {
      this.input.value += command[i];
      this.updateCursor();
      await this.sleep(this.typewriterSpeed + Math.random() * 50);
    }

    await this.sleep(500);
    this.isTyping = false;
  }

  processCommand() {
    const command = this.input.value.trim().toLowerCase();
    if (command === "") return;

    this.addToOutput(
      `<span class="prompt">felipe-macedo@portfolio:~$ </span><span class="command">${this.input.value}</span>`
    );

    if (command !== this.commandHistory[this.commandHistory.length - 1]) {
      this.commandHistory.push(command);
      this.saveHistory();
    }
    this.historyIndex = -1;

    this.executeCommand(command);
    this.input.value = "";
    this.updateCursor();
  }

  executeCommand(command) {
    // Rastrear comando no Google Analytics
    if (typeof trackCommand === "function") {
      trackCommand(command);
    }

    if (this.commands[command]) {
      this.commands[command]();
    } else {
      this.showInvalidCommandFeedback();
      this.addToOutput(
        `<span class="error">‚ùå bash: ${command}: comando n√£o encontrado</span>`
      );
      this.addToOutput(
        `<span class="output-text">üí° Digite '<span class='success'>help</span>' para ver os comandos dispon√≠veis.</span>`
      );
    }
    this.scrollToBottom();
  }

  async executeCommandSilent(command) {
    if (this.commands[command]) {
      this.commands[command]();
    }
    this.scrollToBottom();
  }

  showHelp() {
    const helpText = `
<span class="highlight">üìö Comandos dispon√≠veis:</span>

<span class="success">help</span>           - Mostra esta ajuda
<span class="success">clear</span>          - Limpa a tela
<span class="success">menu</span>           - Menu principal
<span class="success">about</span> | <span class="success">1</span>     - Sobre mim
<span class="success">projects</span> | <span class="success">2</span>   - Meus projetos
<span class="success">contact</span> | <span class="success">3</span>    - Informa√ß√µes de contato

<span class="highlight">üîß Comandos extras:</span>
<span class="success">whoami</span>         - Quem sou eu?
<span class="success">skills</span>         - Tecnologias e n√≠veis
<span class="success">experience</span>     - Timeline profissional
<span class="success">education</span>      - Forma√ß√£o acad√™mica
<span class="success">certifications</span> - Certificados e cursos
<span class="success">resume</span>         - Download do curr√≠culo
<span class="success">status</span>         - Disponibilidade atual
<span class="success">date</span>           - Data e hora atual
<span class="success">ls</span>             - Lista arquivos
<span class="success">pwd</span>            - Diret√≥rio atual
<span class="success">sudo</span>           - Tentar privil√©gios de admin
<span class="success">theme dark/light/matrix/hacker/retro/contrast</span> - Mudar tema
<span class="success">coffee</span> | <span class="success">tdah</span> - Diagn√≥stico TDAH/cafe√≠na

<span class="highlight">üéÆ Easter eggs:</span>
<span class="success">h4x0r-mode</span>     - Modo hacker
<span class="success">matrix</span>         - Entre na Matrix
<span class="success">konami</span>         - C√≥digo Konami
<span class="success">glitch</span>         - Efeito glitch
<span class="success">ascii</span>          - Logo ASCII
<span class="success">growthfolio</span>    - Organiza√ß√£o no GitHub
<span class="success">eastereggs</span>     - Lista de ovos de p√°scoa

<span class="warning">üí° Dica:</span> Use ‚Üë/‚Üì para navegar no hist√≥rico, Tab para autocompletar
<span class="warning">‚å®Ô∏è Atalhos:</span> Ctrl+L para limpar, Ctrl+C para interromper
                `;
    this.addToOutput(helpText);
  }

  clearTerminal() {
    this.output.classList.add("fade-out");
    setTimeout(() => {
      this.output.innerHTML = "";
      this.output.classList.remove("fade-out");
    }, 300);
  }

  async fetchVersion() {
    try {
      const repo = "felipemacedo1/felipemacedo1.github.io";
      const apiUrl = `https://api.github.com/repos/${repo}/releases/latest`;

      const response = await fetch(apiUrl, {
        headers: {
          Accept: "application/vnd.github.v3+json",
        },
      });

      if (response.ok) {
        const data = await response.json();
        this.version = data.tag_name || "v1.0.1";
      } else {
        this.version = "v1.0.1";
      }
    } catch {
      this.version = "v1.0.1";
    }
  }

  showMenu() {
    const menuText = `
<span class="ascii-art align-center">
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
           üöÄ PORTFOLIO TERMINAL ${this.version}            
                     Felipe Macedo                     
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">üìã Selecione uma op√ß√£o:</span>

<span class="menu-option">1 - üë®‚Äçüíª Sobre Mim</span>       <span class="output-text">Experi√™ncia e tecnologias</span>
<span class="menu-option">2 - üöÄ Projetos</span>        <span class="output-text">Meus trabalhos recentes</span>
<span class="menu-option">3 - üìß Contato</span>         <span class="output-text">Como me encontrar</span>

<span class="output-text">Digite o n√∫mero da op√ß√£o ou o comando correspondente.</span>
<span class="warning">üí° Dica: Digite '<span class="success">help</span>' para ver todos os comandos dispon√≠veis!</span>
                `;
    this.addToOutput(menuText);
  }

  whoami() {
    const introText = `
<span class="highlight">üëã Felipe Macedo</span> - Desenvolvedor Full Cycle

üéì Forma√ß√£o:
‚Ä¢ Gest√£o da TI (Anhembi Morumbi)
‚Ä¢ Cursando Ci√™ncia da Computa√ß√£o (FMU)
‚Ä¢ Alumni Generation Brasil

üíº Experi√™ncia com Java, Go, Spring Boot e arquitetura de APIs  
‚öôÔ∏è Foco em solu√ß√µes escal√°veis, microservi√ßos e automa√ß√£o backend

<span class="success">üìä Status:</span> Em constante evolu√ß√£o ‚Äî aprendendo, construindo e compartilhando!
<span class="warning">üí¨ Stack preferido:</span> Go pra performance. Java pra manter vivo.
    `;
    this.addToOutput(introText);
  }

  showAbout() {
    const aboutText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
                 üë®‚Äçüíª SOBRE MIM            
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">üßë‚Äçüíª Felipe Macedo</span>
<span class="output-text">Desenvolvedor Full Cycle | Foco em Back-end e Arquitetura</span>

<span class="success">üéì Forma√ß√£o Acad√™mica:</span>
‚Ä¢ Cursando Bacharelado em Ci√™ncia da Computa√ß√£o (FMU - 2025 a 2029)
‚Ä¢ Graduando tamb√©m em Gest√£o da TI (Anhembi Morumbi - conclus√£o em 2024)
‚Ä¢ Bootcamps e certifica√ß√µes: AWS re/Start, Full Stack Java, Blockchain com Solidity

<span class="success">üíº Experi√™ncia:</span>
‚Ä¢ Analista de Sistemas na Sansuy S.A. (Java, JavaFX, Spring Boot)
‚Ä¢ Ex-Backend Developer na Asapcard (Go, solu√ß√µes financeiras)

<span class="success">üõ†Ô∏è Tecnologias que domino:</span>
‚Ä¢ Java (8+), Spring Boot, JPA/Hibernate, JavaFX
‚Ä¢ Go (Gorilla Mux, GORM), APIs REST, mensageria com RabbitMQ
‚Ä¢ PostgreSQL, Redis, Docker, GitHub Actions
‚Ä¢ HTML, CSS, TypeScript, React (para UIs pontuais)

<span class="success">üöÄ Destaques:</span>
‚Ä¢ Sistemas escal√°veis com foco em performance e manuten√ß√£o
‚Ä¢ Arquiteturas baseadas em microsservi√ßos e eventos
‚Ä¢ Autentica√ß√£o OAuth2, JWT, WebSockets e CI/CD com GitHub Actions

<span class="warning">üí° Curiosidade:</span> Sou apaixonado por sistemas financeiros, criptografia, automa√ß√£o e terminal retr√¥. E sim, caf√© move c√≥digo ‚òï.
    `;
    this.addToOutput(aboutText);
  }

  showProjects() {
    const projectsText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
             üöÄ MEUS PROJETOS       
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<div class="project-item">
<span class="project-title">üõí Sistema de E-commerce Escal√°vel</span>
<span class="project-description">
Plataforma completa de e-commerce constru√≠da com arquitetura de microservi√ßos.
‚Ä¢ <strong>Backend:</strong> Java Spring Boot + Go para processamento de pagamentos
‚Ä¢ <strong>Frontend:</strong> React.js com TypeScript e Material-UI
‚Ä¢ <strong>Infraestrutura:</strong> Kubernetes + AWS EKS
‚Ä¢ <strong>Performance:</strong> 10k+ transa√ß√µes simult√¢neas com lat√™ncia < 100ms
‚Ä¢ <strong>Features:</strong> Cache Redis, Circuit Breaker, Rate Limiting
</span>
<span class="project-link">üîó github.com/felipemacedo/ecommerce-platform</span>
</div>

<div class="project-item">
<span class="project-title">‚ö° API Gateway de Alta Performance</span>
<span class="project-description">
Gateway desenvolvido em Go para gerenciamento centralizado de APIs corporativas.
‚Ä¢ <strong>Rate Limiting:</strong> Algoritmo Token Bucket inteligente
‚Ä¢ <strong>Resilience:</strong> Circuit breaker pattern com fallbacks
‚Ä¢ <strong>Monitoring:</strong> M√©tricas em tempo real com Prometheus + Grafana
‚Ä¢ <strong>Performance:</strong> Lat√™ncia m√©dia < 5ms, 50k RPS
‚Ä¢ <strong>Security:</strong> JWT validation, OAuth2, API Key management
</span>
<span class="project-link">üîó github.com/felipemacedo/go-api-gateway</span>
</div>

<div class="project-item">
<span class="project-title">ü§ñ ChatBot Inteligente com IA</span>
<span class="project-description">
Assistente virtual avan√ßado com processamento de linguagem natural.
‚Ä¢ <strong>Backend:</strong> Python + FastAPI com arquitetura modular
‚Ä¢ <strong>IA:</strong> OpenAI GPT-4 + Custom training com fine-tuning
‚Ä¢ <strong>Integra√ß√£o:</strong> WhatsApp Business API, Telegram, Slack, Discord
‚Ä¢ <strong>Deploy:</strong> Docker containers + Google Cloud Run
‚Ä¢ <strong>Features:</strong> Multi-idioma, Context awareness, Analytics dashboard
</span>
<span class="project-link">üîó github.com/felipemacedo/ai-chatbot</span>
</div>

<span class="success">üìã Caracter√≠sticas dos Projetos:</span>
<span class="output-text">‚úÖ Documenta√ß√£o completa com Swagger/OpenAPI</span>
<span class="output-text">üß™ Testes automatizados (Unit, Integration, E2E)</span>
<span class="output-text">üîÑ CI/CD pipelines com GitHub Actions</span>
<span class="output-text">üìä Monitoramento e logging estruturado</span>
<span class="output-text">üîí Pr√°ticas de seguran√ßa (OWASP Top 10)</span>
                `;
    this.addToOutput(projectsText);
  }

  showContact() {
    const contactText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
         üí¨ VAMOS CONVERSAR?    
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">üìß Contato Profissional:</span>
<div class="contact-item">
<span class="contact-label">üìß Email:</span> contato.dev.macedo@gmail.com
</div>
<div class="contact-item">
<span class="contact-label">üíº LinkedIn:</span> linkedin.com/in/felipemacedo1
</div>
<div class="contact-item">
<span class="contact-label">üêô GitHub:</span> github.com/felipemacedo1
</div>
<div class="contact-item">
<span class="contact-label">üåê Portfolio:</span> https://github.com/orgs/growthfolio/
</div>

<span class="contact-label">üì± WhatsApp:</span> +55 (11) 99753-4105
</div>

<span class="success">üì≤ Redes Sociais:</span>
<div class="contact-item">
<span class="contact-label">üê¶ Twitter(X):</span> ainda n√£o tenho
</div>
<div class="contact-item">
<span class="contact-label">üì∏ Instagram:</span> √©, sou low profile...(ou 'no profile')
</div>

<span class="warning">üíº Status:</span> <span class="success">‚úÖ Dispon√≠vel para freelances</span>

<span class="output-text">
üìç <strong>Localiza√ß√£o:</strong> Itapecerica da Serra - S√£o Paulo, Brasil
‚è∞ <strong>Fuso hor√°rio:</strong> GMT-3 (Bras√≠lia)
üó£Ô∏è <strong>Idiomas:</strong> Portugu√™s (nativo), Ingl√™s (desenvolvendo)
</span>

<span class="highlight">üöÄ Vamos construir algo incr√≠vel juntos!</span>
                `;
    this.addToOutput(contactText);
  }

  showDate() {
    const now = new Date();
    const dateStr = now.toLocaleString("pt-BR", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
    });
    this.addToOutput(`<span class="output-text">üìÖ ${dateStr}</span>`);
  }

  listFiles() {
    const files = `
<span class="output-text">üìÅ Arquivos no diret√≥rio atual:</span>
<span class="success">üìÑ about.txt</span>      <span class="success">üìù projects.md</span>     <span class="success">üìã contact.json</span>
<span class="success">üìÑ resume.pdf</span>     <span class="success">‚öôÔ∏è skills.yml</span>      <span class="success">üíª portfolio.js</span>
                `;
    this.addToOutput(files);
  }

  listFilesDetailed() {
    const detailedFiles = `
<span class="output-text">total 42</span>
<span class="success">-rw-r--r--</span> 1 felipe felipe  1337 Jul 29 10:30 <span class="success">üìÑ about.txt</span>
<span class="success">-rw-r--r--</span> 1 felipe felipe  2048 Jul 29 10:31 <span class="success">üìù projects.md</span>
<span class="success">-rw-r--r--</span> 1 felipe felipe   512 Jul 29 10:32 <span class="success">üìã contact.json</span>
<span class="success">-rw-r--r--</span> 1 felipe felipe  4096 Jul 29 10:33 <span class="success">üìÑ resume.pdf</span>
<span class="success">-rw-r--r--</span> 1 felipe felipe   256 Jul 29 10:34 <span class="success">‚öôÔ∏è skills.yml</span>
<span class="success">-rwxr-xr-x</span> 1 felipe felipe  8192 Jul 29 10:35 <span class="success">üíª portfolio.js</span>
                `;
    this.addToOutput(detailedFiles);
  }

  showPath() {
    this.addToOutput(
      '<span class="output-text">üìÅ /home/felipe/portfolio</span>'
    );
  }

  sudoResponse() {
    const responses = [
      "üö´ Voc√™ n√£o tem permiss√£o para sudo neste sistema, Felipe! üòÖ",
      "üîê sudo: Sorry, try again. (Just kidding, this is a portfolio!)",
      "üõ°Ô∏è Nice try! But this terminal is read-only for visitors üîí",
      "‚ùå sudo: command not found (in portfolio mode) üòè",
      "ü§ñ sudo: access denied. This is a safe environment! üîê",
    ];
    const randomResponse =
      responses[Math.floor(Math.random() * responses.length)];
    this.addToOutput(`<span class="warning">${randomResponse}</span>`);
  }

  changeTheme(theme) {
    const themes = {
      dark: "üåë Escuro",
      light: "‚òÄÔ∏è Claro",
      matrix: "üî¢ Matrix",
      hacker: "üî¥ Hacker",
      retro: "üü† Retr√¥",
      contrast: "‚ö´ Alto Contraste",
    };

    this.currentTheme = theme;
    document.body.className = `theme-${theme}`;
    this.saveTheme(theme);
    this.addToOutput(
      `<span class="success">üé® Tema alterado para: ${
        themes[theme] || theme
      }</span>`
    );

    // Add smooth transition effect
    document.body.style.transition = "all 0.3s ease";
    setTimeout(() => {
      document.body.style.transition = "";
    }, 300);
  }

  hackerMode() {
    const hackerText = `
<span style="color: #ff0000; text-shadow: 0 0 10px #ff0000;">
    ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ
    ‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë üî¥ H4X0R MODE üî¥ ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà
    ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ

    [üö® SYSTEM BREACH DETECTED]
    [üíª ACCESSING MAINFRAME...]
    [üë®‚Äçüíª USER: felipe-macedo DETECTED]
    [üîì PRIVILEGE LEVEL: GOD MODE]
    [üîì BYPASS FIREWALL: SUCCESS]
    [üì° DOWNLOADING THE INTERNET: 69%]
    [üõ°Ô∏è UPLOADING VIRUS: COMPLETED]
    
    Just kidding! üòÑ I'm just a frontend developer.
    The only thing I hack is CSS layouts! üé®
    
    üèÜ Achievement Unlocked: "Elite Hacker" (Not Really)
</span>
                `;
    this.addToOutput(hackerText);
  }

  matrixMode() {
    const matrixText = `
<span style="color: #00ff00; font-weight: bold; text-shadow: 0 0 10px #00ff00;">
    üíä Wake up, Neo... üíä
    
    üåå The Matrix has you...
    üê∞ Follow the white rabbit. 
    
    üö™ Knock, knock, Neo.
    
    ‚é°‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°  01001000
    ‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°  01100101
    ‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢‚é£‚é°‚é¢  01101100
    
    üî¥ "There is no spoon, only code!" ü•Ñ
    üîµ "Welcome to the real world." 
</span>
                `;
    this.addToOutput(matrixText);
  }

  konamiCode() {
    const konamiText = `
<span style="color: #ffaa00; text-shadow: 0 0 5px #ffaa00;">
    üéÆ ‚Üë ‚Üë ‚Üì ‚Üì ‚Üê ‚Üí ‚Üê ‚Üí B A START
    
    üèÜ KONAMI CODE ACTIVATED! üèÜ
    
    You've unlocked... absolutely nothing! üòÑ
    But hey, you know the classic cheat code!
    
    üìà +30 Nostalgia Points
    üéØ +10 Retro Gaming Cred
    üèÖ +1 Developer Street Cred
    
    üéñÔ∏è Achievement Unlocked: "Old School Gamer"
    
    Fun fact: This code was created in 1986! üï∞Ô∏è
</span>
                `;
    this.addToOutput(konamiText);
  }

  ascii() {
    const art = `
<span class="ascii-art align-center">
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                 ‚îÇ
‚îÇ  ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà                      ‚îÇ
‚îÇ  ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà                   ‚îÇ
‚îÇ  ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà                      ‚îÇ
‚îÇ  ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                 ‚îÇ
‚îÇ                                                             ‚îÇ
‚îÇ  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚îÇ
‚îÇ  ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà        ‚îÇ
‚îÇ  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà        ‚îÇ
‚îÇ  ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà        ‚îÇ
‚îÇ  ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
</span>
<span class="output-text">üíª Desenvolvedor Full Cycle | ‚òï Java ‚Ä¢ üêπ Go ‚Ä¢ üçÉ Spring Boot</span>
<span class="success">üìä Commits: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 2.5k+</span>
`;
    this.addToOutput(art);
  }
  // um menu com todos os ovos de pascoa dispon√≠veis
  eastereggs() {
    const list = `
<span class="highlight">üéÆ Easter Eggs Dispon√≠veis:</span>

‚Ä¢ <span class="success">h4x0r-mode</span> ‚Äì Hackeia tudo (mentira)
‚Ä¢ <span class="success">matrix</span> ‚Äì Entra na Matrix
‚Ä¢ <span class="success">konami</span> ‚Äì C√≥digo lend√°rio
‚Ä¢ <span class="success">coffee</span> ‚Äì Diagn√≥stico de cafe√≠na
‚Ä¢ <span class="success">glitch</span> ‚Äì Tela bugada
‚Ä¢ <span class="success">sudo</span> ‚Äì Sem permiss√£o! üòÖ
‚Ä¢ <span class="success">ascii</span> ‚Äì Logo ASCII
‚Ä¢ <span class="success">growthfolio</span> ‚Äì Minha organiza√ß√£o no GitHub
‚Ä¢ <span class="success">joke</span> ‚Äì Piadas de programador
‚Ä¢ <span class="success">quote</span> ‚Äì Cita√ß√µes inspiradoras
‚Ä¢ <span class="success">stats</span> ‚Äì Estat√≠sticas da sess√£o
`;
    this.addToOutput(list);
  }

  growthfolio() {
    const msg = `
<span class="highlight">üìÅ growthfolio</span> - Minha organiza√ß√£o no GitHub

üöÄ Aqui centralizo meus estudos, bibliotecas √∫teis e projetos abertos.
üì¶ Inclui microservi√ßos em Go, integra√ß√µes com GPT, Stripe, Redis, Bitcoin e muito mais.

üîó Acesse: <a href="https://github.com/growthfolio" target="_blank">github.com/growthfolio</a>
`;
    this.addToOutput(msg);
  }

  // give me a focoused text with a funny TDAH diagnosis
  needCoffee() {
    const CoffeeText = `
<span class="warning">
    üß† Sistema cognitivo em sobrecarga! [TDAH Detected] üö®

    üìç Foco atual: 47 abas abertas, 3 terminais rodando, 1 ideia brilhante esquecida.
    ‚è≥ Tempo m√©dio de aten√ß√£o: <span class="highlight">12.3 segundos</span>

    üîÑ Rotina:
    - Abrir VSCode ‚ûú abrir navegador ‚ûú esquecer o que ia fazer
    - Tentar resolver um bug e acabar limpando a mesa inteira
    - Anotar tudo no Notion... mas em qual p√°gina?

    üìã Diagn√≥stico:
    [TDAH.ACTIVE] [MULTITHREADING_MODE=chaotic] [TASKS=42]

    üí° Solu√ß√£o recomendada:
    > deep_breath();  
    > close_tabs_except("portfolio");
    > pomodoro.start();

    üßÉ Combust√≠vel atual: venvanse, motiva√ß√£o vari√°vel e playlists LoFi
</span>
    `;
    this.addToOutput(CoffeeText);
  }

  exitTerminal() {
    const exitText = `
<span class="warning">
    üö™ Logout attempt detected...
    
    But wait! You can't leave yet! üòÖ
    
    üíª This is a web portfolio, not a real terminal!
    üåê Just close the browser tab if you really want to "exit".
    
    üéØ Or better yet, stick around and explore more!
    üöÄ Try some easter eggs: matrix, h4x0r-mode, konami
    
    üìß Don't forget to check out my contact info! 
</span>
                `;
    this.addToOutput(exitText);
  }

  showSkills() {
    const skillsText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
        üõ†Ô∏è STACK TECNOL√ìGICO    
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">üöÄ Backend & APIs:</span>
<span class="success">Java</span>           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë <span class="warning">90%</span> - Spring Boot, JPA, Hibernate
<span class="success">Go</span>             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë <span class="warning">80%</span> - Gorilla Mux, GORM, APIs REST
<span class="success">Spring Boot</span>   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë <span class="warning">90%</span> - Microservi√ßos, Security

<span class="highlight">üìä Banco de Dados:</span>
<span class="success">PostgreSQL</span>    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë <span class="warning">80%</span> - Queries complexas, √çndices
<span class="success">Redis</span>         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë <span class="warning">70%</span> - Cache, Sessions
<span class="success">MongoDB</span>       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë <span class="warning">60%</span> - NoSQL, Agregations

<span class="highlight">üê≥ DevOps & Cloud:</span>
<span class="success">Docker</span>        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë <span class="warning">80%</span> - Containers, Compose
<span class="success">AWS</span>           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë <span class="warning">60%</span> - EC2, RDS, S3
<span class="success">GitHub Actions</span> ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë <span class="warning">70%</span> - CI/CD, Workflows

<span class="highlight">üåê Frontend:</span>
<span class="success">HTML/CSS</span>      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë <span class="warning">80%</span> - Responsivo, Flexbox
<span class="success">JavaScript</span>   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë <span class="warning">70%</span> - ES6+, DOM, APIs
<span class="success">React</span>         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë <span class="warning">60%</span> - Hooks, Context

<span class="highlight">üîß Ferramentas:</span>
<span class="success">Git</span>           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë <span class="warning">90%</span> - Workflows, Branching
<span class="success">IntelliJ IDEA</span> ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë <span class="warning">90%</span> - Debugging, Refactoring
<span class="success">Postman</span>       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë <span class="warning">80%</span> - API Testing
    `;
    this.addToOutput(skillsText);
  }

  showExperience() {
    const experienceText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
          üíº EXPERI√äNCIA PROFISSIONAL    
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<div class="project-item">
<span class="project-title">üè¢ Analista de Sistemas - Sansuy S.A.</span>
<span class="project-description">
<strong>Per√≠odo:</strong> 2024 - Atual
<strong>Localiza√ß√£o:</strong> S√£o Paulo, SP

‚Ä¢ Desenvolvimento de sistemas corporativos com Java e JavaFX
‚Ä¢ Integra√ß√£o de APIs REST com Spring Boot
‚Ä¢ Manuten√ß√£o e otimiza√ß√£o de sistemas legados
‚Ä¢ Colabora√ß√£o em equipe √°gil com metodologias Scrum

<strong>Tecnologias:</strong> Java 8+, Spring Boot, JavaFX, PostgreSQL, Git
</span>
</div>

<div class="project-item">
<span class="project-title">üöÄ Backend Developer - Asapcard</span>
<span class="project-description">
<strong>Per√≠odo:</strong> 2023 - 2024
<strong>Localiza√ß√£o:</strong> Remoto

‚Ä¢ Desenvolvimento de solu√ß√µes financeiras em Go
‚Ä¢ Arquitetura de microservi√ßos escal√°veis
‚Ä¢ Integra√ß√£o com APIs de pagamento e bancos
‚Ä¢ Implementa√ß√£o de seguran√ßa e autentica√ß√£o

<strong>Tecnologias:</strong> Go, Gorilla Mux, GORM, Redis, Docker, PostgreSQL
</span>
</div>

<div class="project-item">
<span class="project-title">üéì Desenvolvedor Trainee - Generation Brasil</span>
<span class="project-description">
<strong>Per√≠odo:</strong> 2023
<strong>Localiza√ß√£o:</strong> S√£o Paulo, SP

‚Ä¢ Bootcamp intensivo Full Stack Java
‚Ä¢ Desenvolvimento de projetos em equipe
‚Ä¢ Metodologias √°geis e soft skills
‚Ä¢ Projeto final: E-commerce com Spring Boot

<strong>Tecnologias:</strong> Java, Spring Boot, MySQL, HTML, CSS, JavaScript
</span>
</div>

<span class="success">üìà Evolu√ß√£o Profissional:</span>
<span class="output-text">2023: In√≠cio na programa√ß√£o ‚Üí 2024: Desenvolvedor Full Stack ‚Üí 2025: Especializa√ß√£o em Arquitetura</span>
    `;
    this.addToOutput(experienceText);
  }

  showEducation() {
    const educationText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
               üéì FORMA√á√ÉO ACAD√äMICA    
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<div class="project-item">
<span class="project-title">üè¶ Bacharelado em Ci√™ncia da Computa√ß√£o</span>
<span class="project-description">
<strong>Institui√ß√£o:</strong> FMU - Faculdades Metropolitanas Unidas
<strong>Per√≠odo:</strong> 2025 - 2029 (Cursando)
<strong>Status:</strong> 1¬∫ Semestre

‚Ä¢ Fundamentos de Programa√ß√£o e Algoritmos
‚Ä¢ Estruturas de Dados e Complexidade
‚Ä¢ Engenharia de Software e Arquitetura
‚Ä¢ Banco de Dados e Sistemas Distribu√≠dos
</span>
</div>

<div class="project-item">
<span class="project-title">üìä Gest√£o da Tecnologia da Informa√ß√£o</span>
<span class="project-description">
<strong>Institui√ß√£o:</strong> Anhembi Morumbi
<strong>Per√≠odo:</strong> 2022 - 2024 (Conclu√≠do)
<strong>Status:</strong> Graduado

‚Ä¢ Gest√£o de Projetos de TI
‚Ä¢ Governan√ßa e Seguran√ßa da Informa√ß√£o
‚Ä¢ An√°lise de Sistemas e Processos
‚Ä¢ Infraestrutura e Redes
</span>
</div>

<span class="success">üèÜ Destaques Acad√™micos:</span>
<span class="output-text">‚Ä¢ M√©dia geral: 8.5/10</span>
<span class="output-text">‚Ä¢ Projetos pr√°ticos com tecnologias atuais</span>
<span class="output-text">‚Ä¢ Participa√ß√£o em grupos de estudo</span>
<span class="output-text">‚Ä¢ Foco em desenvolvimento backend e arquitetura</span>
    `;
    this.addToOutput(educationText);
  }

  showCertifications() {
    const certificationsText = `
<span class="ascii-art align-center">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
            üèÖ CERTIFICA√á√ïES & CURSOS            
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">‚òÅÔ∏è Cloud & DevOps:</span>
<div class="contact-item">
<span class="contact-label">üèÖ AWS re/Start</span> - Amazon Web Services (2023)
</div>
<div class="contact-item">
<span class="contact-label">üê≥ Docker Fundamentals</span> - Docker Inc. (2023)
</div>

<span class="highlight">üöÄ Desenvolvimento:</span>
<div class="contact-item">
<span class="contact-label">‚òï Java Full Stack</span> - Generation Brasil (2023)
</div>
<div class="contact-item">
<span class="contact-label">üçÉ Spring Boot Expert</span> - Udemy (2023)
</div>
<div class="contact-item">
<span class="contact-label">üêπ Go Programming</span> - Curso Online (2023)
</div>

<span class="highlight">üîó Blockchain & Web3:</span>
<div class="contact-item">
<span class="contact-label">‚ö° Solidity Developer</span> - Blockchain Academy (2023)
</div>
<div class="contact-item">
<span class="contact-label">ü™ô Smart Contracts</span> - Ethereum Foundation (2023)
</div>

<span class="highlight">üìä Dados & Analytics:</span>
<div class="contact-item">
<span class="contact-label">üìà SQL Advanced</span> - PostgreSQL Certification (2023)
</div>
<div class="contact-item">
<span class="contact-label">üîÑ Redis Certified</span> - Redis University (2024)
</div>

<span class="success">üéØ Pr√≥ximas Certifica√ß√µes (2025):</span>
<span class="output-text">‚Ä¢ AWS Solutions Architect Associate</span>
<span class="output-text">‚Ä¢ Oracle Certified Professional Java SE</span>
<span class="output-text">‚Ä¢ Kubernetes Administrator (CKA)</span>
    `;
    this.addToOutput(certificationsText);
  }

  downloadResume() {
    const resumeText = `
<span class="highlight">üìÑ Download do Curr√≠culo</span>

<span class="warning">üöß Funcionalidade em desenvolvimento...</span>

<span class="output-text">Por enquanto, voc√™ pode:</span>

‚Ä¢ <span class="success">LinkedIn:</span> linkedin.com/in/felipemacedo1
‚Ä¢ <span class="success">GitHub:</span> github.com/felipemacedo1
‚Ä¢ <span class="success">Email:</span> contato.dev.macedo@gmail.com

<span class="output-text">Ou use os comandos:</span>
<span class="success">about</span> - Informa√ß√µes completas
<span class="success">experience</span> - Hist√≥rico profissional
<span class="success">skills</span> - Tecnologias e n√≠veis

<span class="highlight">üîÑ Em breve: PDF para download!</span>
    `;
    this.addToOutput(resumeText);
  }

  showStatus() {
    const statusText = `
<span class="ascii-art">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë              üü¢ STATUS PROFISSIONAL              ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="success">üü¢ DISPON√çVEL PARA OPORTUNIDADES</span>

<span class="highlight">üíº Modalidades de Trabalho:</span>
‚Ä¢ <span class="success">‚úÖ Freelances</span> - Projetos de curto/m√©dio prazo
‚Ä¢ <span class="success">‚úÖ Consultoria</span> - Arquitetura e otimiza√ß√£o
‚Ä¢ <span class="success">‚úÖ Remoto</span> - Preferencialmente
‚Ä¢ <span class="success">‚úÖ H√≠brido</span> - S√£o Paulo/SP

<span class="highlight">üéØ √Åreas de Interesse:</span>
‚Ä¢ <span class="warning">Backend Development</span> (Java, Go, Spring Boot)
‚Ä¢ <span class="warning">Arquitetura de Microservi√ßos</span>
‚Ä¢ <span class="warning">APIs REST & GraphQL</span>
‚Ä¢ <span class="warning">Sistemas Financeiros</span>
‚Ä¢ <span class="warning">DevOps & Cloud</span>

<span class="highlight">‚è∞ Disponibilidade:</span>
<span class="output-text">üìÖ <strong>Imediata</strong> para projetos freelance</span>
<span class="output-text">üìÖ <strong>30 dias</strong> para posi√ß√µes CLT</span>

<span class="highlight">üìû Entre em Contato:</span>
<span class="output-text">üìß contato.dev.macedo@gmail.com</span>
<span class="output-text">üì± +55 (11) 99753-4105</span>
<span class="output-text">üë§ linkedin.com/in/felipemacedo1</span>

<span class="success">üöÄ Vamos construir algo incr√≠vel juntos!</span>
    `;
    this.addToOutput(statusText);
  }

  showJoke() {
    const jokes = [
      "ü§ñ Por que os programadores preferem o modo escuro?\nPorque a luz atrai bugs!",
      "üêõ Como voc√™ chama um bug que n√£o consegue ser corrigido?\nUm feature!",
      "üíª Por que os programadores odeiam a natureza?\nTem muitos bugs e a documenta√ß√£o √© terr√≠vel!",
      "‚òï Quantos programadores s√£o necess√°rios para trocar uma l√¢mpada?\nNenhum, isso √© um problema de hardware!",
      'üîÑ "Funciona na minha m√°quina" - Famosas √∫ltimas palavras',
      "üìä 99 bugs no c√≥digo, 99 bugs...\nTira um, corrige ao redor, 127 bugs no c√≥digo!",
      "üîç Por que os programadores Java usam √≥culos?\nPorque n√£o conseguem C# (see sharp)!",
    ];

    const randomJoke = jokes[Math.floor(Math.random() * jokes.length)];
    this.addToOutput(
      `<span class="highlight">üé≠ Piada do Dia:</span>\n<span class="output-text">${randomJoke}</span>`
    );
  }

  showQuote() {
    const quotes = [
      '"O c√≥digo √© como humor. Quando voc√™ tem que explic√°-lo, √© ruim." - Cory House',
      '"Primeiro, resolva o problema. Depois, escreva o c√≥digo." - John Johnson',
      '"A melhor maneira de prever o futuro √© invent√°-lo." - Alan Kay',
      '"Qualquer tolo pode escrever c√≥digo que um computador entende. Bons programadores escrevem c√≥digo que humanos entendem." - Martin Fowler',
      '"A programa√ß√£o n√£o √© sobre o que voc√™ sabe; √© sobre o que voc√™ pode descobrir." - Chris Pine',
      '"Experiencia √© o nome que damos aos nossos erros." - Oscar Wilde',
      '"O √∫nico jeito de aprender uma nova linguagem de programa√ß√£o √© escrevendo programas nela." - Dennis Ritchie',
    ];

    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
    this.addToOutput(
      `<span class="highlight">üí≠ Cita√ß√£o Inspiradora:</span>\n<span class="output-text">${randomQuote}</span>`
    );
  }

  showStats() {
    const stats = {
      comandos: this.commandHistory.length,
      tema: this.currentTheme,
      sessao: Math.floor((Date.now() - this.startTime) / 1000),
      favorito: this.getMostUsedCommand(),
    };

    const statsText = `
<span class="ascii-art">
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë            üìà ESTAT√çSTICAS DA SESS√ÉO            ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
</span>

<span class="highlight">üìä Dados da Sess√£o:</span>
<span class="output-text">‚Ä¢ <strong>Comandos executados:</strong> ${
      stats.comandos
    }</span>
<span class="output-text">‚Ä¢ <strong>Tempo de sess√£o:</strong> ${
      stats.sessao
    }s</span>
<span class="output-text">‚Ä¢ <strong>Tema atual:</strong> ${stats.tema}</span>
<span class="output-text">‚Ä¢ <strong>Comando favorito:</strong> ${
      stats.favorito
    }</span>

<span class="highlight">üéØ Performance:</span>
<span class="output-text">‚Ä¢ <strong>Comandos/minuto:</strong> ${(
      stats.comandos /
      (stats.sessao / 60)
    ).toFixed(1)}</span>
<span class="output-text">‚Ä¢ <strong>Efici√™ncia:</strong> ${
      stats.comandos > 10
        ? "Expert"
        : stats.comandos > 5
        ? "Intermedi√°rio"
        : "Iniciante"
    }</span>

<span class="success">üèÜ Continue explorando para descobrir mais comandos!</span>
    `;
    this.addToOutput(statsText);
  }

  getMostUsedCommand() {
    if (this.commandHistory.length === 0) return "nenhum";

    const frequency = {};
    this.commandHistory.forEach((cmd) => {
      frequency[cmd] = (frequency[cmd] || 0) + 1;
    });

    return Object.keys(frequency).reduce((a, b) =>
      frequency[a] > frequency[b] ? a : b
    );
  }

  toggleFullscreen() {
    if (!document.fullscreenElement) {
      document.documentElement
        .requestFullscreen()
        .then(() => {
          this.addToOutput(
            '<span class="success">üñ•Ô∏è Modo tela cheia ativado! Pressione ESC para sair.</span>'
          );
        })
        .catch(() => {
          this.addToOutput(
            '<span class="error">‚ùå Erro ao ativar tela cheia. Navegador n√£o suporta.</span>'
          );
        });
    } else {
      document.exitFullscreen().then(() => {
        this.addToOutput(
          '<span class="warning">üìµ Modo tela cheia desativado.</span>'
        );
      });
    }
  }

  showInvalidCommandFeedback() {
    const terminal = document.querySelector(".terminal-container");
    terminal.style.animation = "shake 0.5s";
    setTimeout(() => {
      terminal.style.animation = "";
    }, 500);
  }

  glitchEffect() {
    const terminal = document.querySelector(".terminal-container");
    terminal.style.animation = "glitch 0.3s";
    setTimeout(() => {
      terminal.style.animation = "";
    }, 300);

    this.addToOutput(
      '<span class="error">üëæ System glitch detected... Reality.exe has stopped working</span>'
    );
    this.addToOutput(
      '<span class="warning">üîß Rebooting matrix... Please wait...</span>'
    );

    setTimeout(() => {
      this.addToOutput(
        '<span class="success">‚úÖ System restored. Welcome back to the simulation!</span>'
      );
    }, 1000);
  }

  loadHistory() {
    try {
      return JSON.parse(localStorage.getItem("terminal-history") || "[]");
    } catch {
      return [];
    }
  }

  saveHistory() {
    try {
      localStorage.setItem(
        "terminal-history",
        JSON.stringify(this.commandHistory.slice(-50))
      );
    } catch {}
  }

  loadTheme() {
    return localStorage.getItem("terminal-theme") || "dark";
  }

  saveTheme(theme) {
    try {
      localStorage.setItem("terminal-theme", theme);
    } catch {}
  }

  navigateHistory(direction) {
    if (this.commandHistory.length === 0) return;

    if (direction === "up") {
      if (this.historyIndex === -1) {
        this.historyIndex = this.commandHistory.length - 1;
      } else if (this.historyIndex > 0) {
        this.historyIndex--;
      }
    } else if (direction === "down") {
      if (this.historyIndex < this.commandHistory.length - 1) {
        this.historyIndex++;
      } else {
        this.historyIndex = -1;
        this.input.value = "";
        this.updateCursor();
        return;
      }
    }

    this.input.value = this.commandHistory[this.historyIndex] || "";
    this.updateCursor();
  }

  showSuggestions() {
    const currentInput = this.input.value.toLowerCase();
    if (!currentInput || currentInput.length < 2) {
      this.hideSuggestions();
      return;
    }

    const availableCommands = Object.keys(this.commands);
    this.suggestions = availableCommands
      .filter((cmd) => cmd.includes(currentInput) && cmd !== currentInput)
      .sort((a, b) => {
        const aStarts = a.startsWith(currentInput);
        const bStarts = b.startsWith(currentInput);
        if (aStarts && !bStarts) return -1;
        if (!aStarts && bStarts) return 1;
        return a.length - b.length;
      })
      .slice(0, 4);

    if (this.suggestions.length > 0) {
      this.displaySuggestions();
    } else {
      this.hideSuggestions();
    }
  }

  displaySuggestions() {
    let suggestionBox = document.getElementById("suggestions");
    if (!suggestionBox) {
      suggestionBox = document.createElement("div");
      suggestionBox.id = "suggestions";
      suggestionBox.style.cssText = `
              position: absolute;
              background: rgba(0, 0, 0, 0.98);
              border: 1px solid #00ff00;
              border-radius: 6px;
              padding: 4px 0;
              bottom: 30px;
              left: 0;
              min-width: 180px;
              max-width: 300px;
              z-index: 1000;
              font-family: inherit;
              font-size: 11px;
              box-shadow: 0 -4px 12px rgba(0, 255, 0, 0.3);
              backdrop-filter: blur(8px);
            `;
      document.getElementById("inputLine").appendChild(suggestionBox);
    }

    const currentInput = this.input.value.toLowerCase();
    suggestionBox.innerHTML = this.suggestions
      .map((cmd, index) => {
        const highlighted = cmd.replace(
          new RegExp(`(${currentInput})`, "gi"),
          '<span style="background: rgba(0,255,255,0.3); color: #00ffff;">$1</span>'
        );
        return `<div style="padding: 6px 12px; color: ${
          index === this.suggestionIndex ? "#00ffff" : "#00ff00"
        }; cursor: pointer; border-radius: 3px; transition: all 0.15s; display: flex; align-items: center;" onmouseover="this.style.background='rgba(0,255,0,0.15)'; this.style.color='#00ffff'" onmouseout="this.style.background='transparent'; this.style.color='#00ff00'" onclick="terminal.selectSuggestion('${cmd}')"><span style="margin-right: 8px;">‚ñ∂</span>${highlighted}</div>`;
      })
      .join("");
  }

  hideSuggestions() {
    const suggestionBox = document.getElementById("suggestions");
    if (suggestionBox) {
      suggestionBox.remove();
    }
    this.suggestions = [];
    this.suggestionIndex = -1;
  }

  selectSuggestion(cmd) {
    this.input.value = cmd;
    this.hideSuggestions();
    this.updateCursor();
    this.input.focus();
  }

  autoComplete() {
    const currentInput = this.input.value.toLowerCase();
    if (!currentInput) return;

    const availableCommands = Object.keys(this.commands);
    const matches = availableCommands.filter(
      (cmd) => cmd.startsWith(currentInput) && cmd !== currentInput
    );

    if (matches.length === 1) {
      this.input.value = matches[0];
      this.updateCursor();
      this.hideSuggestions();
    } else if (matches.length > 1) {
      this.addToOutput(
        `<span class="prompt">felipe-macedo@portfolio:~$ </span><span class="command">${currentInput}</span>`
      );
      this.addToOutput(
        `<span class="output-text">üí° Op√ß√µes dispon√≠veis: <span class="success">${matches.join(
          ", "
        )}</span></span>`
      );
      this.scrollToBottom();
    }
  }

  updateCursor() {
    const inputRect = this.input.getBoundingClientRect();
    const containerRect = this.input.parentElement.getBoundingClientRect();
    const textWidth = this.getTextWidth(this.input.value, this.input);

    this.cursor.style.left = `${
      textWidth + inputRect.left - containerRect.left
    }px`;
  }

  getTextWidth(text, element) {
    const canvas =
      this.getTextWidth.canvas ||
      (this.getTextWidth.canvas = document.createElement("canvas"));
    const context = canvas.getContext("2d");
    const computedStyle = window.getComputedStyle(element);
    context.font = `${computedStyle.fontSize} ${computedStyle.fontFamily}`;
    return context.measureText(text).width;
  }

  addToOutput(text) {
    const outputElement = document.createElement("div");
    outputElement.innerHTML = text;
    this.output.appendChild(outputElement);
  }

  scrollToBottom() {
    const terminal = document.getElementById("terminal");
    terminal.scrollTop = terminal.scrollHeight;
  }

  sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }
}

// Mobile keyboard functions
function typeChar(char) {
  const input = document.getElementById("commandInput");
  input.value += char;
  input.focus();
}

function typeCommand(command) {
  const input = document.getElementById("commandInput");
  input.value = command;
  input.focus();

  // Trigger enter key
  const event = new KeyboardEvent("keydown", {
    key: "Enter",
    code: "Enter",
    keyCode: 13,
  });
  input.dispatchEvent(event);
}

// Initialize terminal when page loads
document.addEventListener("DOMContentLoaded", () => {
  window.terminal = new TerminalPortfolio();
});

// Add loading screen
window.addEventListener("load", () => {
  const loadingScreen = document.createElement("div");
  loadingScreen.innerHTML = `
                <div style="
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: #000;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    z-index: 9999;
                    color: #00ff00;
                    font-family: 'Courier New', monospace;
                ">
                    <div style="text-align: center;">
                        <div class="loading"></div>
                        <p style="margin-top: 20px;">Inicializando terminal...</p>
                    </div>
                </div>
            `;

  document.body.appendChild(loadingScreen);

  setTimeout(() => {
    loadingScreen.style.opacity = "0";
    loadingScreen.style.transition = "opacity 0.5s ease";
    setTimeout(() => {
      document.body.removeChild(loadingScreen);
    }, 500);
  }, 1500);
});
